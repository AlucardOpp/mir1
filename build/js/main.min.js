/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/ios-vh-fix */ "./js/utils/ios-vh-fix.js");
/* harmony import */ var _modules_modals_init_modals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/modals/init-modals */ "./js/modules/modals/init-modals.js");
/* harmony import */ var _modules_visible_search__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/visible-search */ "./js/modules/visible-search.js");
/* harmony import */ var _modules_mobile_menu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/mobile-menu */ "./js/modules/mobile-menu.js");
/* harmony import */ var _modules_header_tabs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/header-tabs */ "./js/modules/header-tabs.js");
/* harmony import */ var _modules_slider_promo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/slider-promo */ "./js/modules/slider-promo.js");
/* harmony import */ var _modules_slider_main_projects__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/slider-main-projects */ "./js/modules/slider-main-projects.js");
/* harmony import */ var _modules_slider_with_text__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/slider-with-text */ "./js/modules/slider-with-text.js");
/* harmony import */ var _modules_slider_text_page__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modules/slider-text-page */ "./js/modules/slider-text-page.js");
/* harmony import */ var _modules_slider_image__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./modules/slider-image */ "./js/modules/slider-image.js");
/* harmony import */ var _modules_slider_spec_offer__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./modules/slider-spec-offer */ "./js/modules/slider-spec-offer.js");
/* harmony import */ var _modules_slider_related_products__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./modules/slider-related-products */ "./js/modules/slider-related-products.js");
/* harmony import */ var _modules_qanda_accordions__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./modules/qanda-accordions */ "./js/modules/qanda-accordions.js");
/* harmony import */ var _modules_checkbox_accordions__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./modules/checkbox-accordions */ "./js/modules/checkbox-accordions.js");
/* harmony import */ var _modules_catalog_select__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./modules/catalog-select */ "./js/modules/catalog-select.js");
/* harmony import */ var _modules_catalog_form__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./modules/catalog-form */ "./js/modules/catalog-form.js");
/* harmony import */ var _modules_phone_mask__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./modules/phone-mask */ "./js/modules/phone-mask.js");
/* harmony import */ var _modules_configuration_tabs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./modules/configuration-tabs */ "./js/modules/configuration-tabs.js");
/* harmony import */ var _modules_tabIndex__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./modules/tabIndex */ "./js/modules/tabIndex.js");
/* harmony import */ var _modules_auto_resize_textarea__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./modules/auto-resize-textarea */ "./js/modules/auto-resize-textarea.js");





















window.addEventListener('DOMContentLoaded', function () {
  Object(_utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_0__["iosVhFix"])();
  Object(_modules_visible_search__WEBPACK_IMPORTED_MODULE_2__["visibleSearchField"])();
  Object(_modules_mobile_menu__WEBPACK_IMPORTED_MODULE_3__["mobileMenu"])();
  Object(_modules_header_tabs__WEBPACK_IMPORTED_MODULE_4__["headerTabs"])();
  Object(_modules_slider_promo__WEBPACK_IMPORTED_MODULE_5__["enablePromoSlider"])();
  Object(_modules_slider_main_projects__WEBPACK_IMPORTED_MODULE_6__["enableMainProjectsSlider"])();
  Object(_modules_slider_with_text__WEBPACK_IMPORTED_MODULE_7__["enableSliderWithText"])();
  Object(_modules_slider_text_page__WEBPACK_IMPORTED_MODULE_8__["enableSliderTextPage"])();
  Object(_modules_slider_image__WEBPACK_IMPORTED_MODULE_9__["enableSliderImage"])();
  Object(_modules_slider_spec_offer__WEBPACK_IMPORTED_MODULE_10__["enableSpecialOfferSlider"])();
  Object(_modules_slider_related_products__WEBPACK_IMPORTED_MODULE_11__["enableRelatedProductsSlider"])();
  Object(_modules_configuration_tabs__WEBPACK_IMPORTED_MODULE_17__["enableSwiperTabs"])();
  Object(_modules_qanda_accordions__WEBPACK_IMPORTED_MODULE_12__["setAccordions"])();
  Object(_modules_checkbox_accordions__WEBPACK_IMPORTED_MODULE_13__["setCheckboxAccordions"])();
  Object(_modules_catalog_select__WEBPACK_IMPORTED_MODULE_14__["setCatalogSelect"])();
  Object(_modules_catalog_form__WEBPACK_IMPORTED_MODULE_15__["setCatalogForm"])();
  Object(_modules_phone_mask__WEBPACK_IMPORTED_MODULE_16__["initPhoneMask"])();
  Object(_modules_configuration_tabs__WEBPACK_IMPORTED_MODULE_17__["initConfigurationTab"])();
  Object(_modules_tabIndex__WEBPACK_IMPORTED_MODULE_18__["disableTabIndex"])();
  Object(_modules_tabIndex__WEBPACK_IMPORTED_MODULE_18__["enableTabIndex"])();
  Object(_modules_auto_resize_textarea__WEBPACK_IMPORTED_MODULE_19__["initAutoResizeTextarea"])();
  window.addEventListener('load', function () {
    Object(_modules_modals_init_modals__WEBPACK_IMPORTED_MODULE_1__["initModals"])();
  });
});

/***/ }),

/***/ "./js/modules/auto-resize-textarea.js":
/*!********************************************!*\
  !*** ./js/modules/auto-resize-textarea.js ***!
  \********************************************/
/*! exports provided: initAutoResizeTextarea, resizeHeight */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initAutoResizeTextarea", function() { return initAutoResizeTextarea; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resizeHeight", function() { return resizeHeight; });
var textarea = document.querySelectorAll('.autoresize-textarea');

var getHeightWithoutBorder = function getHeightWithoutBorder(el) {
  var realscrollHeight = el.scrollHeight;

  if (!el.value) {
    el.value = 0;
    realscrollHeight = el.scrollHeight;
    el.value = '';
  }

  return realscrollHeight + el.offsetHeight - el.clientHeight;
};

var resizeHeight = function resizeHeight(el) {
  el.style.height = 'auto';
  el.style.height = "".concat(getHeightWithoutBorder(el), "px");
};

var initAutoResizeTextarea = function initAutoResizeTextarea() {
  if (!textarea.length) {
    return;
  }

  textarea.forEach(function (el) {
    el.classList.add('.is-initialized');
    el.style.overflow = 'hidden';
    el.style.resize = 'none';
    resizeHeight(el);
    el.addEventListener('input', function () {
      resizeHeight(el);
    });
    var form = el.closest('form');

    if (form) {
      form.addEventListener('submit', function () {
        resizeHeight(el);
      });
    }
  });
  window.addEventListener('resize', function () {
    textarea.forEach(function (el) {
      resizeHeight(el);
    });
  });
};



/***/ }),

/***/ "./js/modules/catalog-form.js":
/*!************************************!*\
  !*** ./js/modules/catalog-form.js ***!
  \************************************/
/*! exports provided: setCatalogForm */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setCatalogForm", function() { return setCatalogForm; });
var setCatalogForm = function setCatalogForm() {
  var catalogForm = document.querySelector('.catalog-form__form');
  var clearButton = document.querySelector('.catalog-form__clear');
  var openFilters = document.querySelector('.catalog-form__open');
  var catalogContainer = document.querySelector('.catalog-form__container');

  if (clearButton) {
    clearButton.addEventListener('click', function () {
      catalogForm.reset();
    });
  }

  if (openFilters) {
    openFilters.addEventListener('click', function () {
      catalogContainer.classList.toggle('catalog-form__container--show');
      openFilters.classList.toggle('catalog-form__open--show');

      if (openFilters.classList.contains('catalog-form__open--show')) {
        openFilters.setAttribute('aria-label', 'Закрыть форму');
        openFilters.setAttribute('aria-pressed', 'true');
      } else {
        openFilters.setAttribute('aria-pressed', 'false');
        openFilters.setAttribute('aria-label', 'Открыть форму');
      }
    });
    openFilters.addEventListener('keydown', function () {
      if (openFilters.classList.contains('catalog-form__open--show')) {
        catalogContainer.classList.add('catalog-form__container--show');
        openFilters.classList.add('catalog-form__open--show');
        openFilters.setAttribute('aria-label', 'Закрыть форму');
        openFilters.setAttribute('aria-pressed', 'true');
      } else {
        catalogContainer.classList.remove('catalog-form__container--show');
        openFilters.classList.remove('catalog-form__open--show');
        openFilters.setAttribute('aria-label', 'Открыть форму');
        openFilters.setAttribute('aria-pressed', 'false');
      }
    });
  }
};



/***/ }),

/***/ "./js/modules/catalog-select.js":
/*!**************************************!*\
  !*** ./js/modules/catalog-select.js ***!
  \**************************************/
/*! exports provided: setCatalogSelect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setCatalogSelect", function() { return setCatalogSelect; });
/* harmony import */ var _vendor_custom_select__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vendor/custom-select */ "./js/vendor/custom-select.js");


var setCatalogSelect = function setCatalogSelect() {
  Object(_vendor_custom_select__WEBPACK_IMPORTED_MODULE_0__["default"])('select');

  if (document.querySelector('#catalog-select')) {
    var select = document.querySelector('#catalog-select').customSelect;

    var something = function something() {
      return select;
    };

    something();
  }
};



/***/ }),

/***/ "./js/modules/checkbox-accordions.js":
/*!*******************************************!*\
  !*** ./js/modules/checkbox-accordions.js ***!
  \*******************************************/
/*! exports provided: setCheckboxAccordions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setCheckboxAccordions", function() { return setCheckboxAccordions; });
var setCheckboxAccordions = function setCheckboxAccordions() {
  var checkboxAccordionTriggers;
  var checkboxTriggersExist = false;
  var checkboxes = document.querySelector('.catalog-form__fieldset');

  if (checkboxes) {
    checkboxTriggersExist = true;
    checkboxAccordionTriggers = checkboxes.querySelectorAll('button');

    var onCheckboxAccordionClick = function onCheckboxAccordionClick(event) {
      var id = event.target.getAttribute('data-accordion');
      var item = checkboxes.querySelector('li[data-accordion="' + id + '"]');
      var showItem = document.querySelector('.catalog-form__item--show');

      var onEscKeydown = function onEscKeydown(evt) {
        if (evt.key === 'Escape' || evt.key === 'Esc') {
          item.classList.remove('catalog-form__item--show');
          document.removeEventListener('keydown', onEscKeydown);
          document.removeEventListener('click', onOverlayClick);
        }
      };

      var onOverlayClick = function onOverlayClick(evt) {
        var target = evt.target;
        var button = item.querySelector('button');
        var itsCheckbox = target === button || item.contains(target);

        if (!itsCheckbox) {
          item.classList.remove('catalog-form__item--show');
          document.removeEventListener('keydown', onEscKeydown);
          document.removeEventListener('click', onOverlayClick);
        }
      };

      document.addEventListener('keydown', onEscKeydown);
      document.addEventListener('click', onOverlayClick);

      if (showItem) {
        showItem.classList.remove('catalog-form__item--show');
      }

      if (item) {
        item.classList.toggle('catalog-form__item--show');
      }

      if (showItem === item) {
        item.classList.remove('catalog-form__item--show');
      }
    };

    if (checkboxTriggersExist) {
      checkboxAccordionTriggers.forEach(function (trigger) {
        trigger.addEventListener('click', onCheckboxAccordionClick);
      });
    }
  }
};



/***/ }),

/***/ "./js/modules/configuration-tabs.js":
/*!******************************************!*\
  !*** ./js/modules/configuration-tabs.js ***!
  \******************************************/
/*! exports provided: initConfigurationTab, enableSwiperTabs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initConfigurationTab", function() { return initConfigurationTab; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enableSwiperTabs", function() { return enableSwiperTabs; });
/* globals Swiper */
var contents = document.querySelectorAll('.tab-info__content');
var tabs = document.querySelectorAll('.tab-info__control');

var findClearActiveClass = function findClearActiveClass(elements) {
  var className = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'active';
  Array.from(elements).find(function (item) {
    return item.classList.remove("".concat(className));
  });
};

var setActiveClass = function setActiveClass(element, index) {
  var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'active';
  element[index].classList.add("".concat(className));
};

var checkoutTabs = function checkoutTabs(item, index) {
  item.addEventListener('click', function () {
    if (item.classList.contains('active')) {
      return;
    }

    var currentItem = index;
    findClearActiveClass(tabs);
    findClearActiveClass(contents);
    setActiveClass(tabs, currentItem);
    setActiveClass(contents, currentItem);
  });
};

var initConfigurationTab = function initConfigurationTab() {
  tabs.forEach(checkoutTabs);
};

var enableSwiperTabs = function enableSwiperTabs() {
  var swiperTabs = new Swiper('.tab-info__controls', {
    simulateTouch: true,
    breakpoints: {
      1024: {
        watchOverflow: true,
        slidesPerView: 'auto'
      },
      1023: {
        slidesPerView: 4.5,
        sliderPerGroup: 1
      },
      768: {
        slidesPerView: 3.5,
        sliderPerGroup: 1
      },
      350: {
        slidesPerView: 2.5,
        sliderPerGroup: 1
      },
      320: {
        slidesPerView: 1.5,
        sliderPerGroup: 1
      }
    },
    a11y: {
      notificationClass: 'tab-info__controls-notification'
    },
    containerModifierClass: 'product-card-info__tabs--',
    slideClass: 'tab-info__controls-item',
    slideActiveClass: 'tab-info__controls-item--active',
    slideNextClass: 'tab-info__controls-item--next',
    slidePrevClass: 'tab-info__controls-item--prev',
    wrapperClass: 'tab-info__controls-list'
  });
  var swiperContainerTabs = new Swiper('.tab-info__contents', {
    direction: 'horizontal',
    thumbs: {
      swiper: swiperTabs
    }
  });
  return swiperTabs;
};



/***/ }),

/***/ "./js/modules/constants.js":
/*!*********************************!*\
  !*** ./js/modules/constants.js ***!
  \*********************************/
/*! exports provided: desktopWidth */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "desktopWidth", function() { return desktopWidth; });
var desktopWidth = 1024;


/***/ }),

/***/ "./js/modules/header-tabs.js":
/*!***********************************!*\
  !*** ./js/modules/header-tabs.js ***!
  \***********************************/
/*! exports provided: headerTabs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "headerTabs", function() { return headerTabs; });
var triggers = document.querySelectorAll('.nav__name-links');
var items = document.querySelectorAll('.nav__item');

var headerTabs = function headerTabs() {
  triggers.forEach(function (trigger) {
    trigger.addEventListener('click', function () {
      var parent = trigger.parentNode;

      if (parent.classList.contains('active')) {
        parent.classList.remove('active');
      } else {
        items.forEach(function (child) {
          child.classList.remove('active');
          document.addEventListener('click', function (evt) {
            if (!evt.target.closest('.nav__name-links')) {
              child.classList.remove('active');
            }
          });
        });
        parent.classList.add('active');
      }
    });
  });
};

var onPopupEscPress = function onPopupEscPress(evt) {
  if (evt.key === 'Escape') {
    evt.preventDefault();
    items.forEach(function (item) {
      item.classList.remove('active');
    });
  }
};

document.addEventListener('keydown', onPopupEscPress);


/***/ }),

/***/ "./js/modules/mobile-menu.js":
/*!***********************************!*\
  !*** ./js/modules/mobile-menu.js ***!
  \***********************************/
/*! exports provided: mobileMenu */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mobileMenu", function() { return mobileMenu; });
var BREAKPOINT_TABLET = window.matchMedia('(max-width: 1023px)');
var header = document.querySelector('.header');
var burger = document.querySelector('.burger');
var body = document.body;
var modal = document.querySelector('.modal');

if (header) {
  header.classList.remove('header--nojs');
}

var mobileMenu = function mobileMenu() {
  if (burger) {
    burger.addEventListener('click', function () {
      if (header.classList.contains('opened')) {
        closeMenu();
      } else {
        openMenu();
      }
    });
  }
};

var deleteOpened = function deleteOpened() {
  if (!BREAKPOINT_TABLET.matches) {
    closeMenu();
  }
};

var openMenu = function openMenu() {
  header.classList.add('opened');
  body.style.position = 'fixed';
};

var closeMenu = function closeMenu() {
  header.classList.remove('opened');
  body.style.position = 'relative';
};

var onPopupEscPress = function onPopupEscPress(evt) {
  if (evt.key === 'Escape') {
    evt.preventDefault();

    if (header && !modal.classList.contains('is-active')) {
      header.classList.remove('opened');
      body.style.position = 'relative';
    }
  }
};

document.addEventListener('keydown', onPopupEscPress);
document.addEventListener('click', function (evt) {
  if (!evt.target.closest('.header') && modal.classList.contains('is-active')) {
    if (header) {
      header.classList.remove('opened');
    }
  }
});
BREAKPOINT_TABLET.addListener(deleteOpened);


/***/ }),

/***/ "./js/modules/modals/init-modals.js":
/*!******************************************!*\
  !*** ./js/modules/modals/init-modals.js ***!
  \******************************************/
/*! exports provided: modals, initModals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modals", function() { return modals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initModals", function() { return initModals; });
/* harmony import */ var _modals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modals */ "./js/modules/modals/modals.js");

var modals;
var settings = {
  'default': {
    preventDefault: true,
    stopPlay: true,
    lockFocus: true,
    startFocus: true,
    focusBack: true,
    eventTimeout: 400,
    openCallback: false,
    closeCallback: false
  }
};

var initModals = function initModals() {
  var modalElements = document.querySelectorAll('.modal');
  var isMobile = navigator.userAgent.toLowerCase().match(/mobile/i);

  if (modalElements.length) {
    modalElements.forEach(function (el) {
      setTimeout(function () {
        el.classList.remove('modal--preload');
      }, 100);

      if (isMobile) {
        el.classList.add('modal--mobile');
      }
    });
  }

  modals = new _modals__WEBPACK_IMPORTED_MODULE_0__["Modals"](settings);
  window.modals = modals;
};



/***/ }),

/***/ "./js/modules/modals/modals.js":
/*!*************************************!*\
  !*** ./js/modules/modals/modals.js ***!
  \*************************************/
/*! exports provided: Modals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Modals", function() { return Modals; });
/* harmony import */ var _utils_scroll_lock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/scroll-lock */ "./js/utils/scroll-lock.js");
/* harmony import */ var _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/focus-lock */ "./js/utils/focus-lock.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }



var Modals = /*#__PURE__*/function () {
  function Modals() {
    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, Modals);

    this._scrollLock = new _utils_scroll_lock__WEBPACK_IMPORTED_MODULE_0__["ScrollLock"]();
    this._focusLock = new _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__["FocusLock"]();
    this._modalOpenElements = document.querySelectorAll('[data-open-modal]');
    this._openedModalElement = null;
    this._modalName = null;
    this._enableScrolling = true;
    this._settingKey = 'default';
    this._settings = settings;
    this._preventDefault = this._settings[this._settingKey].preventDefault;
    this._stopPlay = this._settings[this._settingKey].stopPlay;
    this._lockFocus = this._settings[this._settingKey].lockFocus;
    this._startFocus = this._settings[this._settingKey].startFocus;
    this._focusBack = this._settings[this._settingKey].focusBack;
    this._eventTimeout = this._settings[this._settingKey].eventTimeout;
    this._openCallback = this._settings[this._settingKey].openCallback;
    this._closeCallback = this._settings[this._settingKey].closeCallback;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
    this._documentClickHandler = this._documentClickHandler.bind(this);
    this._modalClickHandler = this._modalClickHandler.bind(this);

    this._init();
  }

  _createClass(Modals, [{
    key: "_init",
    value: function _init() {
      if (this._modalOpenElements.length) {
        document.addEventListener('click', this._documentClickHandler);
      }
    }
  }, {
    key: "_setSettings",
    value: function _setSettings() {
      var settingKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._settingKey;

      if (!this._settings[settingKey]) {
        return;
      }

      this._preventDefault = typeof this._settings[settingKey].preventDefault === 'boolean' ? this._settings[settingKey].preventDefault : this._settings[this._settingKey].preventDefault;
      this._stopPlay = typeof this._settings[settingKey].stopPlay === 'boolean' ? this._settings[settingKey].stopPlay : this._settings[this._settingKey].stopPlay;
      this._lockFocus = typeof this._settings[settingKey].lockFocus === 'boolean' ? this._settings[settingKey].lockFocus : this._settings[this._settingKey].lockFocus;
      this._startFocus = typeof this._settings[settingKey].startFocus === 'boolean' ? this._settings[settingKey].startFocus : this._settings[this._settingKey].startFocus;
      this._focusBack = typeof this._settings[settingKey].lockFocus === 'boolean' ? this._settings[settingKey].focusBack : this._settings[this._settingKey].focusBack;
      this._eventTimeout = typeof this._settings[settingKey].eventTimeout === 'number' ? this._settings[settingKey].eventTimeout : this._settings[this._settingKey].eventTimeout;
      this._openCallback = this._settings[settingKey].openCallback || this._settings[this._settingKey].openCallback;
      this._closeCallback = this._settings[settingKey].closeCallback || this._settings[this._settingKey].closeCallback;
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;

      if (!target.closest('[data-open-modal]')) {
        return;
      }

      evt.preventDefault();
      this._modalName = target.closest('[data-open-modal]').dataset.openModal;

      if (!this._modalName) {
        return;
      }

      if (this._modalName === 'zoom') {
        var imgZoomSrc = target.closest('[data-open-modal]').src;
        var modalImg = document.getElementById('zoom-img');
        modalImg.src = imgZoomSrc;
      }

      this.open();
    }
  }, {
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var isEscKey = evt.key === 'Escape' || evt.key === 'Esc';

      if (isEscKey) {
        evt.preventDefault();
        this.close(document.querySelector('.modal.is-active').dataset.modal);
      }
    }
  }, {
    key: "_modalClickHandler",
    value: function _modalClickHandler(evt) {
      var target = evt.target;

      if (!target.closest('[data-close-modal]')) {
        return;
      }

      this.close(target.closest('[data-modal]').dataset.modal);
    }
  }, {
    key: "_addListeners",
    value: function _addListeners(modal) {
      modal.addEventListener('click', this._modalClickHandler);
      document.addEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "_removeListeners",
    value: function _removeListeners(modal) {
      modal.removeEventListener('click', this._modalClickHandler);
      document.removeEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "_stopInteractive",
    value: function _stopInteractive(modal) {
      if (this._stopPlay) {
        modal.querySelectorAll('video, audio').forEach(function (el) {
          return el.pause();
        });
        modal.querySelectorAll('[data-iframe]').forEach(function (el) {
          el.querySelector('iframe').contentWindow.postMessage('{"event": "command", "func": "pauseVideo", "args": ""}', '*');
        });
      }
    }
  }, {
    key: "_autoPlay",
    value: function _autoPlay(modal) {
      modal.querySelectorAll('[data-iframe]').forEach(function (el) {
        var autoPlay = el.closest('[data-auto-play]');

        if (autoPlay) {
          el.querySelector('iframe').contentWindow.postMessage('{"event":"command","func":"playVideo","args":""}', '*');
        }
      });
    }
  }, {
    key: "open",
    value: function open() {
      var _this = this;

      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._modalName;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));

      if (!modal || modal.classList.contains('is-active')) {
        return;
      }

      document.removeEventListener('click', this._documentClickHandler);
      this._openedModalElement = document.querySelector('.modal.is-active');

      if (this._openedModalElement) {
        this._enableScrolling = false;
        this.close(this._openedModalElement.dataset.modal);
      }

      this._setSettings(modalName);

      modal.classList.add('is-active');

      if (!this._openedModalElement) {
        this._scrollLock.disableScrolling();
      }

      if (this._openCallback) {
        this._openCallback();
      }

      if (this._lockFocus) {
        this._focusLock.lock('.modal.is-active', this._startFocus);
      }

      setTimeout(function () {
        _this._addListeners(modal);

        _this._autoPlay(modal);

        document.addEventListener('click', _this._documentClickHandler);
      }, this._eventTimeout);
    }
  }, {
    key: "close",
    value: function close() {
      var _this2 = this;

      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._modalName;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));
      document.removeEventListener('click', this._documentClickHandler);

      if (!modal || !modal.classList.contains('is-active')) {
        return;
      }

      if (this._lockFocus) {
        this._focusLock.unlock(this._focusBack);
      }

      modal.classList.remove('is-active');

      this._removeListeners(modal);

      this._stopInteractive(modal);

      if (this._closeCallback) {
        this._closeCallback();
      }

      if (this._enableScrolling) {
        setTimeout(function () {
          _this2._scrollLock.enableScrolling();
        }, this._eventTimeout);
      }

      setTimeout(function () {
        document.addEventListener('click', _this2._documentClickHandler);
      }, this._eventTimeout);

      this._setSettings('default');

      this._enableScrolling = true;
    }
  }]);

  return Modals;
}();

/***/ }),

/***/ "./js/modules/phone-mask.js":
/*!**********************************!*\
  !*** ./js/modules/phone-mask.js ***!
  \**********************************/
/*! exports provided: initPhoneMask */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initPhoneMask", function() { return initPhoneMask; });
var phoneInputs = document.querySelectorAll('input[type="tel"]');
var COUNTRY_CODE = '+7';
var length = COUNTRY_CODE.length;

var replacePhoneValue = function replacePhoneValue(el) {
  var matrix = "".concat(COUNTRY_CODE, " (___) ___ __ __");
  var def = matrix.replace(/\D/g, '');
  var i = 0;
  var val = el.value.replace(/\D/g, '');

  if (def.length >= val.length) {
    val = def;
  }

  el.value = matrix.replace(/./g, function (a) {
    return /[_\d]/.test(a) && i < val.length ? val.charAt(i++) : i >= val.length ? '' : a;
  });
};

var onInputPhoneInput = function onInputPhoneInput(_ref) {
  var target = _ref.target;
  replacePhoneValue(target);
};

var onFocusPhoneInput = function onFocusPhoneInput(_ref2) {
  var target = _ref2.target;

  if (!target.value) {
    target.value = COUNTRY_CODE;
    target.addEventListener('input', onInputPhoneInput);
    target.addEventListener('blur', onBlurPhoneInput);
    target.addEventListener('keydown', onKeydownPhoneInput);
  }
};

var onKeydownPhoneInput = function onKeydownPhoneInput(e) {
  if (e.target.selectionStart <= length && e.keyCode !== 8 && e.keyCode !== 46) {
    e.target.setSelectionRange(length, length);
  }

  if ((e.target.selectionStart === length || e.target.selectionStart === 1) && e.keyCode === 8) {
    e.preventDefault();
  }

  if (e.target.selectionStart === 1 && e.keyCode === 46) {
    e.preventDefault();
  }
};

var onBlurPhoneInput = function onBlurPhoneInput(_ref3) {
  var target = _ref3.target;

  if (target.value === COUNTRY_CODE) {
    target.value = '';
    target.removeEventListener('input', onInputPhoneInput);
    target.removeEventListener('blur', onBlurPhoneInput);
  }
};

var initPhoneMask = function initPhoneMask() {
  if (phoneInputs.length) {
    phoneInputs.forEach(function (input) {
      input.addEventListener('focus', onFocusPhoneInput);

      if (input.value) {
        replacePhoneValue(input);
        input.addEventListener('input', onInputPhoneInput);
        input.addEventListener('blur', onBlurPhoneInput);
        input.addEventListener('keydown', onKeydownPhoneInput);
      }
    });
  }
};



/***/ }),

/***/ "./js/modules/qanda-accordions.js":
/*!****************************************!*\
  !*** ./js/modules/qanda-accordions.js ***!
  \****************************************/
/*! exports provided: setAccordions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setAccordions", function() { return setAccordions; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./js/modules/constants.js");


var setAccordions = function setAccordions() {
  var questionsAccordionTriggers;
  var questionsTriggersExist = false;
  var windowWidth = window.innerWidth;
  var questions = document.querySelector('.main-qanda');

  if (questions) {
    questionsTriggersExist = true;
    questionsAccordionTriggers = questions.querySelectorAll('h3');

    var onQuestionAccordionClick = function onQuestionAccordionClick(evt) {
      var id = evt.target.getAttribute('data-accordion');
      var item = questions.querySelector('li[data-accordion="' + id + '"]');
      var title = item.querySelector('h3');

      if (!item.classList.contains('accordion__item--show')) {
        item.classList.add('accordion__item--show');
        title.blur();
      } else {
        item.classList.remove('accordion__item--show');
        title.blur();
      }
    };

    var onQuestionAccordionKeydown = function onQuestionAccordionKeydown(evt) {
      var id = evt.target.getAttribute('data-accordion');
      var item = questions.querySelector('li[data-accordion="' + id + '"]');
      var title = item.querySelector('h3');

      if (evt.key === ' ' || evt.key === 'Enter') {
        evt.preventDefault();

        if (!item.classList.contains('accordion__item--show')) {
          item.classList.add('accordion__item--show');

          if (windowWidth < _constants__WEBPACK_IMPORTED_MODULE_0__["desktopWidth"]) {
            title.blur();
          }
        } else {
          item.classList.remove('accordion__item--show');

          if (windowWidth < _constants__WEBPACK_IMPORTED_MODULE_0__["desktopWidth"]) {
            title.blur();
          }
        }
      }
    };

    if (questionsTriggersExist) {
      questionsAccordionTriggers.forEach(function (trigger) {
        trigger.addEventListener('click', onQuestionAccordionClick);
        trigger.addEventListener('keydown', onQuestionAccordionKeydown);
      });
    }
  }
};



/***/ }),

/***/ "./js/modules/slider-image.js":
/*!************************************!*\
  !*** ./js/modules/slider-image.js ***!
  \************************************/
/*! exports provided: enableSliderImage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enableSliderImage", function() { return enableSliderImage; });
/* globals Swiper */
var enableSliderImage = function enableSliderImage() {
  var sliderImage = new Swiper('.slider-image', {
    a11y: {
      notificationClass: 'slider-image__notification'
    },
    containerModifierClass: 'slider-image--',
    slideClass: 'slider-image__slide',
    slideActiveClass: 'slider-image__slide--active',
    slideNextClass: 'slider-image__slide--next',
    slidePrevClass: 'slider-image__slide--prev',
    wrapperClass: 'slider-image__wrapper',
    loop: true,
    shortSwipes: false,
    pagination: {
      el: '.slider-image__pagination',
      clickable: true,
      bulletClass: 'slider-image__pagination-bullet',
      bulletActiveClass: 'slider-image__pagination-bullet--active',
      clickableClass: 'slider-image__pagination--clickable',
      modifierClass: 'slider-image__pagination--'
    },
    navigation: {
      nextEl: '.slider-image__btn--next',
      prevEl: '.slider-image__btn--prev',
      disabledClass: '.slider-image__btn--disabled'
    }
  });
  return sliderImage;
};



/***/ }),

/***/ "./js/modules/slider-main-projects.js":
/*!********************************************!*\
  !*** ./js/modules/slider-main-projects.js ***!
  \********************************************/
/*! exports provided: enableMainProjectsSlider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enableMainProjectsSlider", function() { return enableMainProjectsSlider; });
/* globals Swiper */
var enableMainProjectsSlider = function enableMainProjectsSlider() {
  var mainProjects = new Swiper('.main-projects__slider', {
    a11y: {
      notificationClass: 'main-projects__notification',
      paginationBulletMessage: 'Перейти к слайду {{index}}',
      nextSlideMessage: 'Следующий слайд',
      prevSlideMessage: 'Предыдущий слайд'
    },
    navigation: {
      nextEl: '.main-projects__button--next',
      prevEl: '.main-projects__button--prev',
      disabledClass: 'main-projects__button--disabled'
    },
    containerModifierClass: 'main-projects__slider--',
    slideClass: 'main-projects__slide',
    slideActiveClass: 'main-projects__slide--active',
    slideNextClass: 'main-projects__slide--next',
    slidePrevClass: 'main-projects__slide--prev',
    wrapperClass: 'main-projects__wrapper',
    slideDuplicateActiveClass: 'main-projects__slide--duplicate-active',
    slideDuplicateClass: 'main-projects__slide--duplicate',
    slideDuplicatePrevClass: 'main-projects__slide--duplicate-prev',
    slideDuplicateNextClass: 'main-projects__slide--duplicate-next',
    loop: true,
    breakpoints: {
      1024: {
        slidesPerView: 3,
        slidesPerGroup: 3,
        spaceBetween: 40
      },
      768: {
        slidesPerView: 2,
        slidesPerGroup: 2,
        spaceBetween: 20
      },
      320: {
        slidesPerView: 1,
        slidesPerGroup: 1,
        spaceBetween: 20
      }
    },
    pagination: {
      el: '.main-projects__pagination',
      clickable: true,
      bulletClass: 'main-projects__bullet',
      bulletActiveClass: 'main-projects__bullet--active',
      clickableClass: 'main-projects__pagination--clickable',
      modifierClass: 'main-projects__pagination--',
      bulletElement: 'button'
    }
  });
  return mainProjects;
};



/***/ }),

/***/ "./js/modules/slider-promo.js":
/*!************************************!*\
  !*** ./js/modules/slider-promo.js ***!
  \************************************/
/*! exports provided: enablePromoSlider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enablePromoSlider", function() { return enablePromoSlider; });
/* globals Swiper */
var enablePromoSlider = function enablePromoSlider() {
  var promo = new Swiper('.promo__slider', {
    a11y: {
      notificationClass: 'promo__notification',
      paginationBulletMessage: 'Перейти к слайду {{index}}'
    },
    containerModifierClass: 'promo__slider--',
    slideClass: 'promo__slide',
    slideActiveClass: 'promo__slide--active',
    slideNextClass: 'promo__slide--next',
    slidePrevClass: 'promo__slide--prev',
    slideDuplicateActiveClass: 'promo__slide--duplicate-active',
    slideDuplicateClass: 'promo__slide--duplicate',
    slideDuplicatePrevClass: 'promo__slide--duplicate-prev',
    slideDuplicateNextClass: 'promo__slide--duplicate-next',
    wrapperClass: 'promo__wrapper',
    loop: true,
    spaceBetween: 170,
    pagination: {
      el: '.promo__pagination',
      clickable: true,
      bulletClass: 'promo__bullet',
      bulletActiveClass: 'promo__bullet--active',
      clickableClass: 'promo__pagination--clickable',
      modifierClass: 'promo__pagination--',
      bulletElement: 'button'
    }
  });
  return promo;
};



/***/ }),

/***/ "./js/modules/slider-related-products.js":
/*!***********************************************!*\
  !*** ./js/modules/slider-related-products.js ***!
  \***********************************************/
/*! exports provided: enableRelatedProductsSlider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enableRelatedProductsSlider", function() { return enableRelatedProductsSlider; });
/* globals Swiper */
var enableRelatedProductsSlider = function enableRelatedProductsSlider() {
  var sliderCards = new Swiper('.product-similar__slider', {
    a11y: {
      notificationClass: 'product-similar__slider-notification'
    },
    containerModifierClass: 'product-similar__slider--',
    slideClass: 'product-similar__slide',
    slideActiveClass: 'product-similar__slide--active',
    slideNextClass: 'product-similar__slide--next',
    slidePrevClass: 'product-similar__slide--prev',
    wrapperClass: 'product-similar__slider-wrapper',
    loop: true,
    breakpoints: {
      1024: {
        slidesPerView: 3,
        slidesPerGroup: 1,
        spaceBetween: 40
      },
      768: {
        slidesPerView: 2,
        slidesPerGroup: 1,
        spaceBetween: 20
      },
      320: {
        slidesPerView: 1,
        slidesPerGroup: 1,
        spaceBetween: 0
      }
    },
    pagination: {
      el: '.product-similar__slider-pagination',
      clickable: true,
      bulletClass: 'product-similar__slider-pagination-bullet',
      bulletActiveClass: 'product-similar__slider-pagination-bullet--active',
      clickableClass: 'product-similar__slider-pagination--clickable',
      modifierClass: 'product-similar__slider-pagination--'
    },
    navigation: {
      nextEl: '.product-similar__slider-btn--next',
      prevEl: '.product-similar__slider-btn--prev',
      disabledClass: '.product-similar__slider-btn--disabled'
    }
  });
  return sliderCards;
};



/***/ }),

/***/ "./js/modules/slider-spec-offer.js":
/*!*****************************************!*\
  !*** ./js/modules/slider-spec-offer.js ***!
  \*****************************************/
/*! exports provided: enableSpecialOfferSlider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enableSpecialOfferSlider", function() { return enableSpecialOfferSlider; });
/* globals Swiper */
var enableSpecialOfferSlider = function enableSpecialOfferSlider() {
  var specialOferImage = new Swiper('.product-card-offer__slider', {
    a11y: {
      notificationClass: 'product-card-offer__notification'
    },
    containerModifierClass: 'product-card-offer__slider--',
    slideClass: 'product-card-offer__slide',
    slideActiveClass: 'product-card-offer__slide--active',
    slideNextClass: 'product-card-offer__slide--next',
    slidePrevClass: 'product-card-offer__slide--prev',
    wrapperClass: 'product-card-offer__slider-wrapper',
    loop: true,
    shortSwipes: false,
    pagination: {
      el: '.product-card-offer__slider-pagination',
      clickable: true,
      bulletClass: 'product-card-offer__slider-pagination-bullet',
      bulletActiveClass: 'product-card-offer__slider-pagination-bullet--active',
      clickableClass: 'product-card-offer__slider-pagination--clickable',
      modifierClass: 'product-card-offer__slider-pagination--'
    },
    navigation: {
      nextEl: '.product-card-offer__slider-btn--next',
      prevEl: '.product-card-offer__slider-btn--prev',
      disabledClass: '.product-card-offer__slider-btn--disabled'
    }
  });
  return specialOferImage;
};



/***/ }),

/***/ "./js/modules/slider-text-page.js":
/*!****************************************!*\
  !*** ./js/modules/slider-text-page.js ***!
  \****************************************/
/*! exports provided: enableSliderTextPage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enableSliderTextPage", function() { return enableSliderTextPage; });
/* globals Swiper */
var enableSliderTextPage = function enableSliderTextPage() {
  var slider = new Swiper('.text-page__slider', {
    direction: 'horizontal',
    loop: true,
    pagination: {
      el: '.text-page__slider-pagination',
      clickable: true,
      bulletClass: 'page-text-slider__bullet',
      bulletActiveClass: 'page-text-slider__bullet--active',
      clickableClass: 'page-text-slider__pagination--clickable',
      modifierClass: 'page-text-slider__pagination--'
    },
    navigation: {
      nextEl: '.text-page__slider-button--next',
      prevEl: '.text-page__slider-button--prev',
      disabledClass: '.text-page__slider-button--disabled'
    },
    a11y: {
      notificationClass: 'page-text-slider__notification'
    }
  });
  return slider;
};



/***/ }),

/***/ "./js/modules/slider-with-text.js":
/*!****************************************!*\
  !*** ./js/modules/slider-with-text.js ***!
  \****************************************/
/*! exports provided: enableSliderWithText */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enableSliderWithText", function() { return enableSliderWithText; });
/* globals Swiper */
var enableSliderWithText = function enableSliderWithText() {
  var sliderWithText = new Swiper('.slider-with-text', {
    direction: 'horizontal',
    slidesPerView: 1,
    loop: true,
    shortSwipes: false,
    pagination: {
      el: '.slider-with-text__pagination',
      clickable: true,
      bulletClass: 'page-text-slider__bullet',
      bulletActiveClass: 'page-text-slider__bullet--active',
      clickableClass: 'page-text-slider__pagination--clickable',
      modifierClass: 'page-text-slider__pagination--'
    },
    navigation: {
      nextEl: '.slider-with-text__button--next',
      prevEl: '.slider-with-text__button--prev',
      disabledClass: '.slider-with-text__button--disabled'
    }
  });
  return sliderWithText;
};



/***/ }),

/***/ "./js/modules/tabIndex.js":
/*!********************************!*\
  !*** ./js/modules/tabIndex.js ***!
  \********************************/
/*! exports provided: disableTabIndex, enableTabIndex */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "disableTabIndex", function() { return disableTabIndex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enableTabIndex", function() { return enableTabIndex; });
var disableTabIndex = function disableTabIndex() {
  var duplicateSlides = document.querySelectorAll('.main-projects__slide--duplicate');

  if (duplicateSlides) {
    duplicateSlides.forEach(function (slide) {
      var duplicateLink = slide.querySelector('.main-projects__link');
      duplicateLink.tabIndex = '-1';
    });
  }
};

var enableTabIndex = function enableTabIndex() {
  var selectOptions = document.querySelectorAll('.select__option');

  if (selectOptions) {
    selectOptions.forEach(function (option) {
      option.tabIndex = '0';
    });
  }
};



/***/ }),

/***/ "./js/modules/visible-search.js":
/*!**************************************!*\
  !*** ./js/modules/visible-search.js ***!
  \**************************************/
/*! exports provided: visibleSearchField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "visibleSearchField", function() { return visibleSearchField; });
var fieldSearch = document.querySelector('.header__search');

var visibleSearchField = function visibleSearchField() {
  document.addEventListener('click', function (evt) {
    var target = evt.target;

    if (fieldSearch) {
      if (target.closest('.header__contact-button--search')) {
        fieldSearch.classList.toggle('active');
      } else if (!target.closest('.header__contact-button--search') && !target.closest('.header__search')) {
        fieldSearch.classList.remove('active');
      }
    }
  });
};

var onPopupEscPress = function onPopupEscPress(evt) {
  if (evt.key === 'Escape') {
    evt.preventDefault();

    if (fieldSearch) {
      fieldSearch.classList.remove('active');
    }
  }
};

document.addEventListener('keydown', onPopupEscPress);


/***/ }),

/***/ "./js/utils/focus-lock.js":
/*!********************************!*\
  !*** ./js/utils/focus-lock.js ***!
  \********************************/
/*! exports provided: FocusLock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FocusLock", function() { return FocusLock; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var SELECTORS = ['a[href]', 'area[href]', 'input:not([disabled]):not([type="hidden"]):not([aria-hidden])', 'select:not([disabled]):not([aria-hidden])', 'textarea:not([disabled]):not([aria-hidden])', 'button:not([disabled]):not([aria-hidden])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^="-"])'];
var FocusLock = /*#__PURE__*/function () {
  function FocusLock() {
    _classCallCheck(this, FocusLock);

    this._lockedSelector = null;
    this._focusableElements = null;
    this._endElement = null;
    this._selectors = SELECTORS;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
  }

  _createClass(FocusLock, [{
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var activeElement = document.activeElement;

      if (evt.key === 'Tab') {
        if (!this._focusableElements.length) {
          evt.preventDefault();
          activeElement.blur();
          return;
        }

        if (this._focusableElements.length === 1) {
          evt.preventDefault();

          this._focusableElements[0].focus();

          return;
        }

        if (this._focusableElements.length > 1 && !activeElement.closest(this._lockedSelector)) {
          evt.preventDefault();

          this._focusableElements[0].focus();

          return;
        }
      }

      if (evt.key === 'Tab' && !evt.shiftKey && activeElement === this._focusableElements[this._focusableElements.length - 1]) {
        evt.preventDefault();

        this._focusableElements[0].focus();
      }

      if (evt.key === 'Tab' && evt.shiftKey && activeElement === this._focusableElements[0]) {
        evt.preventDefault();

        this._focusableElements[this._focusableElements.length - 1].focus();
      }
    }
  }, {
    key: "lock",
    value: function lock(lockedSelector) {
      var startFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      this.unlock();
      this._lockedSelector = lockedSelector;
      var lockedElement = document.querySelector(this._lockedSelector);
      this._focusableElements = lockedElement.querySelectorAll(this._selectors);
      this._endElement = document.activeElement;

      var startElement = lockedElement.querySelector('[data-focus]') || this._focusableElements[0];

      if (this._endElement) {
        this._endElement.blur();
      }

      if (startElement && startFocus) {
        startElement.focus();
      }

      document.addEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "unlock",
    value: function unlock() {
      var returnFocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

      if (this._endElement && returnFocus) {
        this._endElement.focus();
      }

      this._lockedSelector = null;
      this._focusableElements = null;
      this._endElement = null;
      document.removeEventListener('keydown', this._documentKeydownHandler);
    }
  }]);

  return FocusLock;
}();
window.focusLock = new FocusLock();

/***/ }),

/***/ "./js/utils/ios-checker.js":
/*!*********************************!*\
  !*** ./js/utils/ios-checker.js ***!
  \*********************************/
/*! exports provided: iosChecker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosChecker", function() { return iosChecker; });
var iosChecker = function iosChecker() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform) || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};

/***/ }),

/***/ "./js/utils/ios-vh-fix.js":
/*!********************************!*\
  !*** ./js/utils/ios-vh-fix.js ***!
  \********************************/
/*! exports provided: iosVhFix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosVhFix", function() { return iosVhFix; });
var isIos = function isIos() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform) || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};

var iosVhFix = function iosVhFix() {
  if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
    if (isIos()) {
      var vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      window.addEventListener('resize', function () {
        vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      });
    }
  }
};



/***/ }),

/***/ "./js/utils/scroll-lock.js":
/*!*********************************!*\
  !*** ./js/utils/scroll-lock.js ***!
  \*********************************/
/*! exports provided: ScrollLock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScrollLock", function() { return ScrollLock; });
/* harmony import */ var _ios_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ios-checker */ "./js/utils/ios-checker.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }


var ScrollLock = /*#__PURE__*/function () {
  function ScrollLock() {
    _classCallCheck(this, ScrollLock);

    this._iosChecker = _ios_checker__WEBPACK_IMPORTED_MODULE_0__["iosChecker"];
    this._lockClass = this._iosChecker() ? 'scroll-lock-ios' : 'scroll-lock';
    this._scrollTop = null;
  }

  _createClass(ScrollLock, [{
    key: "_getScrollbarWidth",
    value: function _getScrollbarWidth() {
      return window.innerWidth - document.documentElement.clientWidth;
    }
  }, {
    key: "_getBodyScrollTop",
    value: function _getBodyScrollTop() {
      return self.pageYOffset || document.documentElement && document.documentElement.ScrollTop || document.body && document.body.scrollTop;
    }
  }, {
    key: "disableScrolling",
    value: function disableScrolling() {
      this._scrollTop = document.body.dataset.scroll = document.body.dataset.scroll ? document.body.dataset.scroll : this._getBodyScrollTop();

      if (this._getScrollbarWidth()) {
        document.body.style.paddingRight = "".concat(this._getScrollbarWidth(), "px");
      }

      document.body.style.top = "-".concat(this._scrollTop, "px");
      document.body.classList.add(this._lockClass);
    }
  }, {
    key: "enableScrolling",
    value: function enableScrolling() {
      document.body.classList.remove(this._lockClass);
      window.scrollTo(0, +document.body.dataset.scroll);
      document.body.style.paddingRight = null;
      document.body.style.top = null;
      document.body.removeAttribute('data-scroll');
      this._scrollTop = null;
    }
  }]);

  return ScrollLock;
}();
window.scrollLock = new ScrollLock();

/***/ }),

/***/ "./js/vendor/custom-select.js":
/*!************************************!*\
  !*** ./js/vendor/custom-select.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return customSelect; });
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/**
 * custom-select
 * A lightweight JS script for custom select creation.
 * Needs no dependencies.
 *
 * v0.0.1
 * (https://github.com/custom-select/custom-select)
 *
 * Copyright (c) 2016 Gionatan Lombardi & Marco Nucara
 * MIT License
 */
var defaultParams = {
  containerClass: "select__container",
  openerClass: "select__opener",
  panelClass: "select__panel",
  optionClass: "select__option",
  optgroupClass: "select__optgroup",
  isSelectedClass: "select__option--selected",
  hasFocusClass: "select__option--focus",
  isDisabledClass: "select__container--disabled",
  isOpenClass: "select__container--open"
};

function builder(el, builderParams) {
  var containerClass = "customSelect";
  var isOpen = false;
  var uId = "";
  var select = el;
  var container;
  var opener;
  var focusedElement;
  var selectedElement;
  var panel;
  var currLabel;
  var resetSearchTimeout;
  var searchKey = ""; //
  // Inner Functions
  //
  // Sets the focused element with the neccessary classes substitutions

  function setFocusedElement(cstOption) {
    if (focusedElement) {
      focusedElement.classList.remove(builderParams.hasFocusClass);
    }

    if (typeof cstOption !== "undefined") {
      focusedElement = cstOption;
      focusedElement.classList.add(builderParams.hasFocusClass); // Offset update: checks if the focused element is in the visible part of the panelClass
      // if not dispatches a custom event

      if (isOpen) {
        if (cstOption.offsetTop < cstOption.offsetParent.scrollTop || cstOption.offsetTop > cstOption.offsetParent.scrollTop + cstOption.offsetParent.clientHeight - cstOption.clientHeight) {
          cstOption.dispatchEvent(new CustomEvent("custom-select:focus-outside-panel", {
            bubbles: true
          }));
        }
      }
    } else {
      focusedElement = undefined;
    }
  } // Reassigns the focused and selected custom option
  // Updates the opener text
  // IMPORTANT: the setSelectedElement function doesn't change the select value!


  function setSelectedElement(cstOption) {
    if (selectedElement) {
      selectedElement.classList.remove(builderParams.isSelectedClass);
      selectedElement.removeAttribute("id");
      opener.removeAttribute("aria-activedescendant");
    }

    if (typeof cstOption !== "undefined") {
      cstOption.classList.add(builderParams.isSelectedClass);
      cstOption.setAttribute("id", "".concat(containerClass, "-").concat(uId, "-selectedOption"));
      opener.setAttribute("aria-activedescendant", "".concat(containerClass, "-").concat(uId, "-selectedOption"));
      selectedElement = cstOption;
      opener.children[0].textContent = selectedElement.customSelectOriginalOption.text;
    } else {
      selectedElement = undefined;
      opener.children[0].textContent = "";
    }

    setFocusedElement(cstOption);
  }

  function setValue(value) {
    // Gets the option with the provided value
    var toSelect = select.querySelector("option[value='".concat(value, "']")); // If no option has the provided value get the first

    if (!toSelect) {
      var _select$options = _slicedToArray(select.options, 1);

      toSelect = _select$options[0];
    } // The option with the provided value becomes the selected one
    // And changes the select current value


    toSelect.selected = true;
    setSelectedElement(select.options[select.selectedIndex].customSelectCstOption);
  }

  function moveFocuesedElement(direction) {
    // Get all the .custom-select-options
    // Get the index of the current focused one
    var currentFocusedIndex = [].indexOf.call(select.options, focusedElement.customSelectOriginalOption); // If the next or prev custom option exist
    // Sets it as the new focused one

    if (select.options[currentFocusedIndex + direction]) {
      setFocusedElement(select.options[currentFocusedIndex + direction].customSelectCstOption);
    }
  } // Open/Close function (toggle)


  function open(bool) {
    // Open
    if (bool || typeof bool === "undefined") {
      // If present closes an opened instance of the plugin
      // Only one at time can be open
      var openedCustomSelect = document.querySelector(".".concat(containerClass, ".").concat(builderParams.isOpenClass));

      if (openedCustomSelect) {
        openedCustomSelect.customSelect.open = false;
      } // Opens only the clicked one


      container.classList.add(builderParams.isOpenClass); // aria-expanded update

      container.classList.add(builderParams.isOpenClass);
      opener.setAttribute("aria-expanded", "true"); // Updates the scrollTop position of the panel in relation with the focused option

      if (selectedElement) {
        panel.scrollTop = selectedElement.offsetTop;
      } // Dispatches the custom event open


      container.dispatchEvent(new CustomEvent("custom-select:open")); // Sets the global state

      isOpen = true; // Close
    } else {
      // Removes the css classes
      container.classList.remove(builderParams.isOpenClass); // aria-expanded update

      opener.setAttribute("aria-expanded", "false"); // Sets the global state

      isOpen = false; // When closing the panel the focused custom option must be the selected one

      setFocusedElement(selectedElement); // Dispatches the custom event close

      container.dispatchEvent(new CustomEvent("custom-select:close"));
    }

    return isOpen;
  }

  function clickEvent(e) {
    // Opener click
    if (e.target === opener || opener.contains(e.target)) {
      if (isOpen) {
        open(false);
      } else {
        open();
      } // Custom Option click

    } else if (e.target.classList && e.target.classList.contains(builderParams.optionClass) && panel.contains(e.target)) {
      setSelectedElement(e.target); // Sets the corrisponding select's option to selected updating the select's value too

      selectedElement.customSelectOriginalOption.selected = true;
      open(false); // Triggers the native change event of the select

      select.dispatchEvent(new CustomEvent("change")); // click on label or select (click on label corrispond to select click)
    } else if (e.target === select) {
      // if the original select is focusable (for any external reason) let the focus
      // else trigger the focus on opener
      if (opener !== document.activeElement && select !== document.activeElement) {
        opener.focus();
      } // Click outside the container closes the panel

    } else if (isOpen && !container.contains(e.target)) {
      open(false);
    }
  }

  function mouseoverEvent(e) {
    // On mouse move over and options it bacames the focused one
    if (e.target.classList && e.target.classList.contains(builderParams.optionClass)) {
      setFocusedElement(e.target);
    }
  }

  function keydownEvent(e) {
    if (!isOpen) {
      // On "Arrow down", "Arrow up" and "Space" keys opens the panel
      if (e.keyCode === 40 || e.keyCode === 38 || e.keyCode === 32) {
        open();
      }
    } else {
      switch (e.keyCode) {
        case 13:
        case 32:
          // On "Enter" or "Space" selects the focused element as the selected one
          setSelectedElement(focusedElement); // Sets the corrisponding select's option to selected updating the select's value too

          selectedElement.customSelectOriginalOption.selected = true; // Triggers the native change event of the select

          select.dispatchEvent(new CustomEvent("change"));
          open(false);
          break;

        case 27:
          // On "Escape" closes the panel
          open(false);
          break;

        case 38:
          // On "Arrow up" set focus to the prev option if present
          moveFocuesedElement(-1);
          break;

        case 40:
          // On "Arrow down" set focus to the next option if present
          moveFocuesedElement(+1);
          break;

        default:
          // search in panel (autocomplete)
          if (e.keyCode >= 48 && e.keyCode <= 90) {
            // clear existing reset timeout
            if (resetSearchTimeout) {
              clearTimeout(resetSearchTimeout);
            } // reset timeout for empty search key


            resetSearchTimeout = setTimeout(function () {
              searchKey = "";
            }, 1500); // update search keyword appending the current key

            searchKey += String.fromCharCode(e.keyCode); // search the element

            for (var i = 0, l = select.options.length; i < l; i++) {
              // removed cause not supported by IE:
              // if (options[i].text.startsWith(searchKey))
              if (select.options[i].text.toUpperCase().substr(0, searchKey.length) === searchKey) {
                setFocusedElement(select.options[i].customSelectCstOption);
                break;
              }
            }
          }

          break;
      }
    }
  }

  function changeEvent() {
    var index = select.selectedIndex;
    var element = index === -1 ? undefined : select.options[index].customSelectCstOption;
    setSelectedElement(element);
  } // When the option is outside the visible part of the opened panel, updates the scrollTop position
  // This is the default behaviour
  // To block it the plugin user must
  // add a "custom-select:focus-outside-panel" eventListener on the panel
  // with useCapture set to true
  // and stopPropagation


  function scrollToFocused(e) {
    var currPanel = e.currentTarget;
    var currOption = e.target; // Up

    if (currOption.offsetTop < currPanel.scrollTop) {
      currPanel.scrollTop = currOption.offsetTop; // Down
    } else {
      currPanel.scrollTop = currOption.offsetTop + currOption.clientHeight - currPanel.clientHeight;
    }
  }

  function addEvents() {
    document.addEventListener("click", clickEvent);
    panel.addEventListener("mouseover", mouseoverEvent);
    panel.addEventListener("custom-select:focus-outside-panel", scrollToFocused);
    select.addEventListener("change", changeEvent);
    container.addEventListener("keydown", keydownEvent);
  }

  function removeEvents() {
    document.removeEventListener("click", clickEvent);
    panel.removeEventListener("mouseover", mouseoverEvent);
    panel.removeEventListener("custom-select:focus-outside-panel", scrollToFocused);
    select.removeEventListener("change", changeEvent);
    container.removeEventListener("keydown", keydownEvent);
  }

  function disabled(bool) {
    if (bool && !select.disabled) {
      container.classList.add(builderParams.isDisabledClass);
      select.disabled = true;
      opener.removeAttribute("tabindex");
      container.dispatchEvent(new CustomEvent("custom-select:disabled"));
      removeEvents();
    } else if (!bool && select.disabled) {
      container.classList.remove(builderParams.isDisabledClass);
      select.disabled = false;
      opener.setAttribute("tabindex", "0");
      container.dispatchEvent(new CustomEvent("custom-select:enabled"));
      addEvents();
    }
  } // Form a given select children DOM tree (options and optgroup),
  // Creates the corresponding custom HTMLElements list (divs with different classes and attributes)


  function parseMarkup(children) {
    var nodeList = children;
    var cstList = [];

    if (typeof nodeList.length === "undefined") {
      throw new TypeError("Invalid Argument");
    }

    for (var i = 0, li = nodeList.length; i < li; i++) {
      if (nodeList[i] instanceof HTMLElement && nodeList[i].tagName.toUpperCase() === "OPTGROUP") {
        var cstOptgroup = document.createElement("div");
        cstOptgroup.classList.add(builderParams.optgroupClass);
        cstOptgroup.setAttribute("data-label", nodeList[i].label); // IMPORTANT: Stores in a property of the created custom option group
        // a hook to the the corrisponding select's option group

        cstOptgroup.customSelectOriginalOptgroup = nodeList[i]; // IMPORTANT: Stores in a property of select's option group
        // a hook to the created custom option group

        nodeList[i].customSelectCstOptgroup = cstOptgroup;
        var subNodes = parseMarkup(nodeList[i].children);

        for (var j = 0, lj = subNodes.length; j < lj; j++) {
          cstOptgroup.appendChild(subNodes[j]);
        }

        cstList.push(cstOptgroup);
      } else if (nodeList[i] instanceof HTMLElement && nodeList[i].tagName.toUpperCase() === "OPTION") {
        var cstOption = document.createElement("div");
        cstOption.classList.add(builderParams.optionClass);
        cstOption.textContent = nodeList[i].text;
        cstOption.setAttribute("data-value", nodeList[i].value);
        cstOption.setAttribute("role", "option"); // IMPORTANT: Stores in a property of the created custom option
        // a hook to the the corrisponding select's option

        cstOption.customSelectOriginalOption = nodeList[i]; // IMPORTANT: Stores in a property of select's option
        // a hook to the created custom option

        nodeList[i].customSelectCstOption = cstOption; // If the select's option is selected

        if (nodeList[i].selected) {
          setSelectedElement(cstOption);
        }

        cstList.push(cstOption);
      } else {
        throw new TypeError("Invalid Argument");
      }
    }

    return cstList;
  }

  function _append(nodePar, appendIntoOriginal, targetPar) {
    var target;

    if (typeof targetPar === "undefined" || targetPar === select) {
      target = panel;
    } else if (targetPar instanceof HTMLElement && targetPar.tagName.toUpperCase() === "OPTGROUP" && select.contains(targetPar)) {
      target = targetPar.customSelectCstOptgroup;
    } else {
      throw new TypeError("Invalid Argument");
    } // If the node provided is a single HTMLElement it is stored in an array


    var node = nodePar instanceof HTMLElement ? [nodePar] : nodePar; // Injects the options|optgroup in the select

    if (appendIntoOriginal) {
      for (var i = 0, l = node.length; i < l; i++) {
        if (target === panel) {
          select.appendChild(node[i]);
        } else {
          target.customSelectOriginalOptgroup.appendChild(node[i]);
        }
      }
    } // The custom markup to append


    var markupToInsert = parseMarkup(node); // Injects the created DOM content in the panel

    for (var _i2 = 0, _l = markupToInsert.length; _i2 < _l; _i2++) {
      target.appendChild(markupToInsert[_i2]);
    }

    return node;
  }

  function _insertBefore(node, targetPar) {
    var target;

    if (targetPar instanceof HTMLElement && targetPar.tagName.toUpperCase() === "OPTION" && select.contains(targetPar)) {
      target = targetPar.customSelectCstOption;
    } else if (targetPar instanceof HTMLElement && targetPar.tagName.toUpperCase() === "OPTGROUP" && select.contains(targetPar)) {
      target = targetPar.customSelectCstOptgroup;
    } else {
      throw new TypeError("Invalid Argument");
    } // The custom markup to append


    var markupToInsert = parseMarkup(node.length ? node : [node]);
    target.parentNode.insertBefore(markupToInsert[0], target); // Injects the option or optgroup node in the original select and returns the injected node

    return targetPar.parentNode.insertBefore(node.length ? node[0] : node, targetPar);
  }

  function remove(node) {
    var cstNode;

    if (node instanceof HTMLElement && node.tagName.toUpperCase() === "OPTION" && select.contains(node)) {
      cstNode = node.customSelectCstOption;
    } else if (node instanceof HTMLElement && node.tagName.toUpperCase() === "OPTGROUP" && select.contains(node)) {
      cstNode = node.customSelectCstOptgroup;
    } else {
      throw new TypeError("Invalid Argument");
    }

    cstNode.parentNode.removeChild(cstNode);
    var removedNode = node.parentNode.removeChild(node);
    changeEvent();
    return removedNode;
  }

  function empty() {
    var removed = [];

    while (select.children.length) {
      panel.removeChild(panel.children[0]);
      removed.push(select.removeChild(select.children[0]));
    }

    setSelectedElement();
    return removed;
  }

  function destroy() {
    for (var i = 0, l = select.options.length; i < l; i++) {
      delete select.options[i].customSelectCstOption;
    }

    var optGroup = select.getElementsByTagName("optgroup");

    for (var _i3 = 0, _l2 = optGroup.length; _i3 < _l2; _i3++) {
      delete optGroup.customSelectCstOptgroup;
    }

    removeEvents();
    return container.parentNode.replaceChild(select, container);
  } //
  // Custom Select DOM tree creation
  //
  // Creates the container/wrapper


  container = document.createElement("div");
  container.classList.add(builderParams.containerClass, containerClass); // Creates the opener

  opener = document.createElement("span");
  opener.className = builderParams.openerClass;
  opener.setAttribute("role", "combobox");
  opener.setAttribute("aria-autocomplete", "list");
  opener.setAttribute("aria-expanded", "false");
  opener.innerHTML = "<span>\n  ".concat(select.selectedIndex !== -1 ? select.options[select.selectedIndex].text : "", "\n  </span>"); // Creates the panel
  // and injects the markup of the select inside
  // with some tag and attributes replacement

  panel = document.createElement("div"); // Create random id

  var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

  for (var i = 0; i < 5; i++) {
    uId += possible.charAt(Math.floor(Math.random() * possible.length));
  }

  panel.id = "".concat(containerClass, "-").concat(uId, "-panel");
  panel.className = builderParams.panelClass;
  panel.setAttribute("role", "listbox");
  opener.setAttribute("aria-owns", panel.id);

  _append(select.children, false); // Injects the container in the original DOM position of the select


  container.appendChild(opener);
  select.parentNode.replaceChild(container, select);
  container.appendChild(select);
  container.appendChild(panel); // ARIA labelledby - label

  if (document.querySelector("label[for=\"".concat(select.id, "\"]"))) {
    currLabel = document.querySelector("label[for=\"".concat(select.id, "\"]"));
  } else if (container.parentNode.tagName.toUpperCase() === "LABEL") {
    currLabel = container.parentNode;
  }

  if (typeof currLabel !== "undefined") {
    currLabel.setAttribute("id", "".concat(containerClass, "-").concat(uId, "-label"));
    opener.setAttribute("aria-labelledby", "".concat(containerClass, "-").concat(uId, "-label"));
  } // Event Init


  if (select.disabled) {
    container.classList.add(builderParams.isDisabledClass);
  } else {
    opener.setAttribute("tabindex", "0");
    select.setAttribute("tabindex", "-1");
    addEvents();
  } // Stores the plugin public exposed methods and properties, directly in the container HTMLElement


  container.customSelect = {
    get pluginOptions() {
      return builderParams;
    },

    get open() {
      return isOpen;
    },

    set open(bool) {
      open(bool);
    },

    get disabled() {
      return select.disabled;
    },

    set disabled(bool) {
      disabled(bool);
    },

    get value() {
      return select.value;
    },

    set value(val) {
      setValue(val);
    },

    append: function append(node, target) {
      return _append(node, true, target);
    },
    insertBefore: function insertBefore(node, target) {
      return _insertBefore(node, target);
    },
    remove: remove,
    empty: empty,
    destroy: destroy,
    opener: opener,
    select: select,
    panel: panel,
    container: container
  }; // Stores the plugin directly in the original select

  select.customSelect = container.customSelect; // Returns the plugin instance, with the public exposed methods and properties

  return container.customSelect;
}

function customSelect(element, customParams) {
  // Overrides the default options with the ones provided by the user
  var nodeList = [];
  var selects = [];
  return function init() {
    // The plugin is called on a single HTMLElement
    if (element && element instanceof HTMLElement && element.tagName.toUpperCase() === "SELECT") {
      nodeList.push(element); // The plugin is called on a selector
    } else if (element && typeof element === "string") {
      var elementsList = document.querySelectorAll(element);

      for (var i = 0, l = elementsList.length; i < l; ++i) {
        if (elementsList[i] instanceof HTMLElement && elementsList[i].tagName.toUpperCase() === "SELECT") {
          nodeList.push(elementsList[i]);
        }
      } // The plugin is called on any HTMLElements list (NodeList, HTMLCollection, Array, etc.)

    } else if (element && element.length) {
      for (var _i4 = 0, _l3 = element.length; _i4 < _l3; ++_i4) {
        if (element[_i4] instanceof HTMLElement && element[_i4].tagName.toUpperCase() === "SELECT") {
          nodeList.push(element[_i4]);
        }
      }
    } // Launches the plugin over every HTMLElement
    // And stores every plugin instance


    for (var _i5 = 0, _l4 = nodeList.length; _i5 < _l4; ++_i5) {
      selects.push(builder(nodeList[_i5], Object.assign({}, defaultParams, customParams)));
    } // Returns all plugin instances


    return selects;
  }();
}

/***/ })

/******/ });
//# sourceMappingURL=main.min.js.map